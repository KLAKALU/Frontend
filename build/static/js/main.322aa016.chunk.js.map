{"version":3,"sources":["components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["MainContainer","useState","createissue","setCreateissue","issues","setIssues","useEffect","a","axios","get","result","console","log","data","fetchData","resetTextField","Fragment","Container","component","maxWidth","CssBaseline","onSubmit","event","post","content","then","response","id","preventDefault","Input","type","name","value","placeholder","onChange","target","Button","variant","color","List","style","marginTop","map","item","ListItem","ListItemText","created_at","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAce,SAASA,IAAmB,IAAD,EACFC,mBAAS,IADP,mBACjCC,EADiC,KACpBC,EADoB,OAEZF,mBAAS,IAFG,mBAEjCG,EAFiC,KAEzBC,EAFyB,KAqBxCC,qBAAU,WAAQ,4CAChB,4BAAAC,EAAA,sEACuBC,IAAMC,IAAI,sDADjC,OACQC,EADR,OAEIC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAOG,MACnBR,EAAUK,EAAOG,MAJrB,4CADgB,uBAAC,WAAD,wBAOdC,KACG,IAEP,IAAMC,EAAiB,WACrBZ,EAAe,KAGjB,OACE,iCACA,iCACE,sDAEF,8BACA,cAAC,IAAMa,SAAP,UACE,eAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACE,uBAAMC,SAxCM,SAACC,GACnBX,QAAQC,IAAI,wCACZJ,IAAMe,KAAK,qDACT,CACEC,QAAStB,IAEXuB,MAAK,SAAAC,GACLf,QAAQC,IAAI,wBAAyBc,EAASb,MAC9CR,EAAU,GAAD,mBAAKD,GAAL,CAAa,CACpBuB,GAAID,EAASb,KAAKc,GAClBH,QAASE,EAASb,KAAKW,YAEzBT,OAEFO,EAAMM,kBA0BA,UACE,cAACC,EAAA,EAAD,CACIC,KAAK,OACLC,KAAK,UACLC,MAAO9B,EACP+B,YAAY,aACZC,SAAU,SAAAZ,GAAK,OAAInB,EAAemB,EAAMa,OAAOH,UAEnD,cAACI,EAAA,EAAD,CACEN,KAAK,SACLO,QAAQ,YACRC,MAAM,UAHR,yCAOJ,cAACC,EAAA,EAAD,CACEC,MAAO,CAACC,UAAW,QACnBvB,UAAU,KAFZ,SAIGd,EAAOsC,KAAI,SAAAC,GAAI,OACd,cAACC,EAAA,EAAD,CAAwB1B,UAAU,KAAlC,SACE,eAAC2B,EAAA,EAAD,iBACMF,EAAKhB,GADX,WAEWgB,EAAKnB,QAFhB,QAGQmB,EAAKG,eAJAH,EAAKhB,gBAY5B,gD,MCtFW,SAASoB,IACtB,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,MCPN,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.322aa016.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  Button,\n  Container,\n  CssBaseline,\n  List,\n  ListItem,\n  ListItemText,\n  Input,\n  ListItemSecondaryAction,\n  Checkbox\n  } from '@material-ui/core';\n\nexport default function MainContainer ()  {\n  const [createissue, setCreateissue] = useState(\"\");\n  const [issues, setIssues] = useState([]);\n\n  const createIssue = (event) => {\n    console.log(\"イベント発火\")\n    axios.post('https://thawing-wildwood-48291.herokuapp.com/sured',\n      {\n        content: createissue\n      }\n    ).then(response => {\n      console.log(\"registration response\", response.data)\n      setIssues([...issues, {\n        id: response.data.id,\n        content: response.data.content\n      }])\n      resetTextField()\n    })\n    event.preventDefault()\n  }\n\n  useEffect(()  =>  {\n    async function fetchData()  {\n      const result = await axios.get('https://thawing-wildwood-48291.herokuapp.com/sured',)\n        console.log(result)\n        console.log(result.data)\n        setIssues(result.data);\n      }\n      fetchData();\n      }, []);\n\n  const resetTextField = () => {\n    setCreateissue('')\n  }\n\n  return (\n    <body>\n    <header>\n      <h1>掲示板</h1>\n    </header>\n    <div>\n    <React.Fragment>\n      <Container component='main' maxWidth='xs'>\n        <CssBaseline/>\n          <form onSubmit={createIssue}>\n            <Input\n                type=\"text\"\n                name=\"content\"\n                value={createissue}\n                placeholder=\"Enter text\"\n                onChange={event => setCreateissue(event.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              variant='contained'\n              color='primary'>\n                つぶやく\n            </Button>\n          </form>\n        <List\n          style={{marginTop: '48px'}}\n          component='ul'\n        >\n          {issues.map(item => (\n            <ListItem key={item.id} component='li' >\n              <ListItemText>\n                ID:{item.id}\n                Content:{item.content}\n                Time:{item.created_at}\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </Container>\n    </React.Fragment>\n    </div>\n    <footer>\n        Horizon\n      </footer>\n    </body>\n  );\n}\n","import React from 'react';\nimport Todo from './components/Todo'\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Todo/>\n    </div>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}